[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "optical_factory_backend"
version = "0.1.0"
authors = [
  { name="Votre Nom/Equipe", email="votre@email.com" },
]
description = "Backend FastAPI pour Optical Factory"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License", # Si vous choisissez MIT
    "Operating System :: OS Independent",
]
dependencies = [
    # Lire les dépendances depuis requirements.txt est possible,
    # mais les lister ici est plus standard avec pyproject.toml
    "fastapi~=0.109.0",
    "uvicorn[standard]~=0.25.0",
    "pydantic~=1.10.0",
    "typing-extensions==4.12.0",
    "httpx~=0.25.0",
    "numpy", # Déjà ajouté
    "scikit-learn", # Déjà ajouté
    "joblib", # Déjà ajouté
    # Ajouter pytest ici aussi pour les dépendances de dev
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "requests",
    "opencv-python",
    "psutil",
    "scikit-learn",
    "joblib",
    "pandas",     # Gardé pour le benchmark
    "fastapi",    # Pour le backend
    "uvicorn[standard]", # Pour le serveur backend
    "pydantic"    # Pour la validation backend
]

# Garder la configuration pytest
[tool.pytest.ini_options]
markers = [
    "unitaire: Tests unitaires isolant une fonction.",
    "fonctionnel: Tests fonctionnels de l'API (succès).",
    "erreur: Tests d'erreurs de l'API (échec attendu).",
    "biais: Tests de représentativité et de biais.",
]

# Dire à setuptools où trouver le code
[tool.setuptools.packages.find]
where = ["src"] 